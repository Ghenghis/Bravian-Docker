name: 🐳 Docker Build & Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  docker-build:
    name: 🏗️ Build Docker Images
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
    
    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: 🔍 Validate docker-compose.yml
      run: |
        docker-compose config
    
    - name: 🏗️ Build Docker Images
      run: |
        docker-compose build --no-cache
    
    - name: ✅ Verify Images Built
      run: |
        docker images
    
    - name: 📊 Image Size Report
      run: |
        echo "## Docker Image Sizes" >> $GITHUB_STEP_SUMMARY
        docker images --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}" >> $GITHUB_STEP_SUMMARY

  structure-validation:
    name: 📁 Validate Project Structure
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
    
    - name: ✅ Check Required Files
      run: |
        echo "Checking required files..."
        files=(
          "docker-compose.yml"
          "Makefile"
          ".env.example"
          "README.md"
          "composer.json"
          "package.json"
        )
        
        for file in "${files[@]}"; do
          if [ -f "$file" ]; then
            echo "✅ $file exists"
          else
            echo "❌ $file missing"
            exit 1
          fi
        done
    
    - name: ✅ Check Documentation
      run: |
        echo "Checking documentation..."
        docs=(
          "docs/API_DOCUMENTATION.md"
          "docs/ARCHITECTURE_DIAGRAMS.md"
          "docs/DEPLOYMENT_OPERATIONS_GUIDE.md"
          "docs/ENTERPRISE_BLUEPRINT.md"
          "docs/SECURITY_DOCUMENTATION.md"
        )
        
        for doc in "${docs[@]}"; do
          if [ -f "$doc" ]; then
            echo "✅ $doc exists"
          else
            echo "⚠️ $doc missing (optional)"
          fi
        done
    
    - name: ✅ Check Scripts
      run: |
        echo "Checking automation scripts..."
        if [ -d "scripts" ]; then
          echo "✅ Scripts directory exists"
          find scripts -name "*.ps1" -o -name "*.sh" | while read script; do
            echo "  📜 Found: $script"
          done
        else
          echo "⚠️ Scripts directory missing"
        fi

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
    
    - name: 🔍 Run Trivy Security Scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'
    
    - name: 📊 Upload Trivy Results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  summary:
    name: 📊 Build Summary
    runs-on: ubuntu-latest
    needs: [docker-build, structure-validation, security-scan]
    if: always()
    
    steps:
    - name: 📊 Generate Summary
      run: |
        echo "# 🚀 Docker Travian CI/CD Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## ✅ Build Status" >> $GITHUB_STEP_SUMMARY
        echo "- Docker Build: ${{ needs.docker-build.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Structure Validation: ${{ needs.structure-validation.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Security Scan: ${{ needs.security-scan.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📦 Repository Info" >> $GITHUB_STEP_SUMMARY
        echo "- Branch: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- Triggered by: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
